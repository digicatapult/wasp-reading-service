# docker-compose.yml
version: '3'
services:
  wasp-reading-service-postgres-testing:
    container_name: wasp-reading-service-postgres-testing
    image: postgres:13.2-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=readings
  zookeeper:
    image: 'docker.io/bitnami/zookeeper:3-debian-10'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=EXTERNAL://:9092,INTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=EXTERNAL://localhost:9092,INTERNAL://kafka:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      - zookeeper
  kafka-topics:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    command: /bin/sh -c "
      sleep 20 &&
      kafka-topics.sh --bootstrap-server kafka:9093 --create --topic readings --partitions 1 --replication-factor 1 --if-not-exists &&
      kafka-topics.sh --bootstrap-server kafka:9093 --create --topic reading-notifications --partitions 1 --replication-factor 1 --if-not-exists"
    depends_on:
      - zookeeper
      - kafka

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
